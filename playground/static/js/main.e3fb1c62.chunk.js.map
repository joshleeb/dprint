{"version":3,"sources":["formatter.worker.ts","components/Spinner.tsx","components/CodeEditor.tsx","components/ExternalLink.tsx","FormatterWorker.ts","plugins/getPluginDefaultConfig.ts","plugins/getPluginUrls.ts","Playground.tsx","utils/UrlSharer.ts","index.tsx"],"names":["addMethods","methods","module","exports","w","Worker","name","Spinner","props","backgroundColor","className","style","color","loading","size","CodeEditor","editor","monacoEditor","outerContainerRef","React","createRef","disposables","lastScrollTop","state","editorComponent","undefined","editorDidMount","bind","reactMonacoEditorPromise","then","language","languages","typescript","typescriptDefaults","setCompilerOptions","noLib","target","ScriptTarget","ESNext","allowNonTsExtensions","setDiagnosticsOptions","noSyntaxValidation","noSemanticValidation","defineTheme","base","inherit","rules","colors","setState","default","catch","err","console","error","this","updateScrollTop","updateJsonSchema","ref","getEditor","dispose","length","width","height","value","text","theme","onChange","options","automaticLayout","renderWhitespace","readOnly","readonly","minimap","enabled","quickSuggestions","rulers","lineWidth","push","onDidChangeModelContent","setPosition","column","lineNumber","onDidScrollChange","e","scrollTopChanged","onScrollTopChange","scrollTop","lastHeight","lastWidth","intervalId","setInterval","containerElement","current","offsetWidth","offsetHeight","layout","clearInterval","setTimeout","setScrollTop","jsonSchemaUrl","json","jsonDefaults","diagnosticsOptions","schemas","uri","validate","allowComments","enableSchemaRequest","fileMatch","Component","ExternalLink","id","href","url","rel","formatterWorker","createWorker","pluginInfoListeners","formatListeners","errorListeners","addEventListener","ev","data","type","listener","info","message","configSchemaUrl","signal","a","fetch","response","wroteProperty","Object","keys","properties","propertyName","property","defaultValue","definitions","toString","aborted","schemaVersion","Error","typescriptPlugin","latest","find","p","configKey","jsonPlugin","markdownPlugin","tomlPlugin","dockerfilePlugin","getLanguageFromPluginUrl","result","exec","Playground","configText","onConfigTextChanged","onTextChanged","formattedText","selectedPluginUrl","selectedPluginInfo","pluginUrls","onSelectPluginUrl","isLoading","useState","fileExtension","setFileExtension","useEffect","fileExtensions","timeout","filePath","fileText","postMessage","clearTimeout","config","JSON","parse","useMemo","parseInt","isNaN","onFileExtensionChange","useCallback","event","split","defaultSize","allowResize","minSize","pane1Style","overflowX","overflowY","pane2Style","flex","display","selectedIndex","map","pluginUrl","i","ext","decompress","decompressFromEncodedURIComponent","trim","urlSaver","locationHash","document","location","hash","matches","getText","getConfigText","getLanguage","window","history","replaceState","compressToEncodedURIComponent","initialUrl","getUrlInfo","isFirstLoad","Loader","setPluginUrls","setPluginUrl","pluginInfo","setPluginInfo","setText","setConfigText","defaultConfigText","setDefaultConfigText","setFormattedText","setIsLoading","abortController","AbortController","getPluginUrls","alert","abort","onPluginInfo","onFormat","onError","index","indexOf","splice","updateUrl","getPluginDefaultConfig","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e3fb1c62.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"b39be745c0f9e887b44f.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import React from \"react\";\nimport { BeatLoader } from \"react-spinners\";\n\nexport function Spinner(props: { backgroundColor?: string }) {\n  const { backgroundColor } = props;\n  return (\n    <div className={\"verticallyCenter horizontallyCenter fillHeight\"} style={{ backgroundColor }}>\n      <BeatLoader color={\"#fff\"} loading={true} size={25} />\n    </div>\n  );\n}\n","import type * as monacoEditorForTypes from \"monaco-editor\";\nimport React from \"react\";\nimport type ReactMonacoEditorForTypes from \"react-monaco-editor\";\nimport { Spinner } from \"./Spinner\";\n\nexport interface CodeEditorProps {\n  onChange?: (text: string) => void;\n  text?: string;\n  readonly?: boolean;\n  lineWidth?: number;\n  scrollTop?: number;\n  jsonSchemaUrl?: string;\n  onScrollTopChange?: (scrollTop: number) => void;\n  language: \"typescript\" | \"json\" | \"markdown\" | \"toml\" | \"dockerfile\" | undefined;\n}\n\nexport interface CodeEditorState {\n  editorComponent: (typeof ReactMonacoEditorForTypes) | undefined | false;\n}\n\nexport class CodeEditor extends React.Component<CodeEditorProps, CodeEditorState> {\n  private editor: monacoEditorForTypes.editor.IStandaloneCodeEditor | undefined;\n  private monacoEditor: typeof monacoEditorForTypes | undefined;\n  private outerContainerRef = React.createRef<HTMLDivElement>();\n  private disposables: monacoEditorForTypes.IDisposable[] = [];\n\n  constructor(props: CodeEditorProps) {\n    super(props);\n    this.state = {\n      editorComponent: undefined,\n    };\n    this.editorDidMount = this.editorDidMount.bind(this);\n\n    const reactMonacoEditorPromise = import(\"react-monaco-editor\");\n    import(\"monaco-editor\").then(monacoEditor => {\n      this.monacoEditor = monacoEditor;\n      if (this.props.language === \"typescript\") {\n        monacoEditor.languages.typescript.typescriptDefaults.setCompilerOptions({\n          noLib: true,\n          target: monacoEditor.languages.typescript.ScriptTarget.ESNext,\n          allowNonTsExtensions: true,\n        });\n        monacoEditor.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n          noSyntaxValidation: true,\n          noSemanticValidation: true,\n        });\n      }\n\n      monacoEditor.editor.defineTheme(\"dprint-theme\", {\n        base: \"vs-dark\",\n        inherit: true,\n        rules: [],\n        colors: {\n          \"editorRuler.foreground\": \"#283430\",\n        },\n      });\n\n      reactMonacoEditorPromise.then(editor => {\n        this.setState({ editorComponent: editor.default });\n      }).catch(err => {\n        console.error(err);\n        this.setState({ editorComponent: false });\n      });\n    }).catch(err => {\n      console.error(err);\n      this.setState({ editorComponent: false });\n    });\n  }\n\n  render() {\n    this.updateScrollTop();\n    this.updateJsonSchema();\n\n    return (\n      <div className=\"codeEditor\" ref={this.outerContainerRef}>\n        {this.getEditor()}\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    for (const disposable of this.disposables) {\n      disposable.dispose();\n    }\n    this.disposables.length = 0; // clear\n  }\n\n  private getEditor() {\n    if (this.state.editorComponent == null) {\n      return <Spinner backgroundColor=\"#1e1e1e\" />;\n    }\n    if (this.state.editorComponent === false) {\n      return <div className={\"errorMessage\"}>Error loading code editor. Please refresh the page to try again.</div>;\n    }\n\n    return (\n      <this.state.editorComponent\n        width=\"100%\"\n        height=\"100%\"\n        value={this.props.text}\n        theme=\"dprint-theme\"\n        language={this.props.language}\n        onChange={text => this.props.onChange && this.props.onChange(text)}\n        editorDidMount={this.editorDidMount}\n        options={{\n          automaticLayout: false,\n          renderWhitespace: \"all\",\n          readOnly: this.props.readonly || false,\n          minimap: { enabled: false },\n          quickSuggestions: false,\n          rulers: this.props.lineWidth == null ? [] : [this.props.lineWidth],\n        }}\n      />\n    );\n  }\n\n  private editorDidMount(editor: monacoEditorForTypes.editor.IStandaloneCodeEditor) {\n    this.editor = editor;\n\n    this.disposables.push(this.editor.onDidChangeModelContent(() => {\n      if (this.props.readonly) {\n        this.editor!.setPosition({\n          column: 1,\n          lineNumber: 1,\n        });\n      }\n    }));\n\n    this.disposables.push(this.editor.onDidScrollChange(e => {\n      if (e.scrollTopChanged && this.props.onScrollTopChange) {\n        this.props.onScrollTopChange(e.scrollTop);\n      }\n    }));\n\n    // manually refresh the layout of the editor (lightweight compared to monaco editor)\n    let lastHeight = 0;\n    let lastWidth = 0;\n    const intervalId = setInterval(() => {\n      const containerElement = this.outerContainerRef.current;\n      if (containerElement == null) {\n        return;\n      }\n\n      const width = containerElement.offsetWidth;\n      const height = containerElement.offsetHeight;\n      if (lastHeight === height && lastWidth === width) {\n        return;\n      }\n\n      editor.layout();\n\n      lastHeight = height;\n      lastWidth = width;\n    }, 500);\n    this.disposables.push({ dispose: () => clearInterval(intervalId) });\n  }\n\n  private lastScrollTop = 0;\n  private updateScrollTop() {\n    if (this.editor == null || this.lastScrollTop === this.props.scrollTop) {\n      return;\n    }\n\n    // todo: not sure how to not do this in the render method? I'm not a react/web person.\n    setTimeout(() => {\n      if (this.props.scrollTop != null) {\n        this.editor!.setScrollTop(this.props.scrollTop);\n        this.lastScrollTop = this.props.scrollTop;\n      }\n    }, 0);\n  }\n\n  private updateJsonSchema() {\n    if (this.monacoEditor != null && this.props.jsonSchemaUrl != null) {\n      if (this.monacoEditor.languages.json.jsonDefaults.diagnosticsOptions.schemas?.[0]?.uri !== this.props.jsonSchemaUrl) {\n        this.monacoEditor.languages.json.jsonDefaults.setDiagnosticsOptions({\n          validate: true,\n          allowComments: true,\n          enableSchemaRequest: true,\n          schemas: [{\n            uri: this.props.jsonSchemaUrl,\n            fileMatch: [\"*\"],\n          }],\n        });\n      }\n    }\n  }\n}\n","import React from \"react\";\n\nexport function ExternalLink(props: { text: string; url: string; id?: string }): React.ReactElement {\n  return <a id={props.id} href={props.url} rel=\"noopener noreferrer\">{props.text}</a>;\n}\n","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport createWorker from \"workerize-loader!./formatter.worker\";\n\nimport type { PluginInfo } from \"@dprint/formatter\";\n\nconst formatterWorker = createWorker();\nconst pluginInfoListeners: ((info: PluginInfo) => void)[] = [];\nconst formatListeners: ((text: string) => void)[] = [];\nconst errorListeners: ((err: string) => void)[] = [];\n\nformatterWorker.addEventListener(\"message\", ev => {\n  switch (ev.data.type) {\n    case \"PluginInfo\":\n      for (const listener of pluginInfoListeners) {\n        listener(ev.data.info);\n      }\n      break;\n    case \"Format\":\n      for (const listener of formatListeners) {\n        listener(ev.data.text);\n      }\n      break;\n    case \"Error\":\n      for (const listener of errorListeners) {\n        listener(ev.data.message);\n      }\n      break;\n  }\n});\n\nexport function loadUrl(url: string) {\n  formatterWorker.postMessage({\n    type: \"LoadUrl\",\n    url,\n  });\n}\n\nexport function setConfig(config: any) {\n  formatterWorker.postMessage({\n    type: \"SetConfig\",\n    config,\n  });\n}\n\nexport function formatText(filePath: string, fileText: string) {\n  formatterWorker.postMessage({\n    type: \"Format\",\n    filePath,\n    fileText,\n  });\n}\n\nexport function addOnPluginInfo(listener: (info: PluginInfo) => void) {\n  pluginInfoListeners.push(listener);\n}\n\nexport function removeOnPluginInfo(listener: (info: PluginInfo) => void) {\n  const index = pluginInfoListeners.indexOf(listener);\n  if (index >= 0) {\n    pluginInfoListeners.splice(index, 1);\n  }\n}\n\nexport function addOnFormat(listener: (text: string) => void) {\n  formatListeners.push(listener);\n}\n\nexport function removeOnFormat(listener: (text: string) => void) {\n  const index = formatListeners.indexOf(listener);\n  if (index >= 0) {\n    formatListeners.splice(index, 1);\n  }\n}\n\nexport function addOnError(listener: (err: string) => void) {\n  errorListeners.push(listener);\n}\n\nexport function removeOnError(listener: (err: string) => void) {\n  const index = errorListeners.indexOf(listener);\n  if (index >= 0) {\n    errorListeners.splice(index, 1);\n  }\n}\n","export async function getPluginDefaultConfig(configSchemaUrl: string, signal: AbortSignal) {\n  if (configSchemaUrl == null) {\n    return \"{\\n}\\n\";\n  }\n\n  try {\n    const response = await fetch(configSchemaUrl, {\n      signal,\n    });\n    const json = await response.json();\n    let text = \"{\";\n    let wroteProperty = false;\n\n    for (const propertyName of Object.keys(json.properties)) {\n      if (propertyName === \"$schema\" || propertyName === \"deno\" || propertyName === \"locked\") {\n        continue;\n      }\n      const property = json.properties[propertyName];\n      let defaultValue: string | boolean | number | undefined;\n\n      if (property[\"$ref\"]) {\n        defaultValue = json.definitions[propertyName]?.default;\n      } else {\n        defaultValue = property.default;\n      }\n\n      if (defaultValue != null) {\n        if (wroteProperty) {\n          text += \",\\n\";\n        } else {\n          text += \"\\n\";\n        }\n\n        text += `  \"${propertyName}\": `;\n        if (typeof defaultValue === \"string\") {\n          text += `\"${defaultValue}\"`;\n        } else {\n          if (propertyName === \"lineWidth\") {\n            text += \"80\";\n          } else {\n            text += `${defaultValue.toString()}`;\n          }\n        }\n\n        wroteProperty = true;\n      }\n    }\n\n    text += \"\\n}\\n\";\n\n    return text;\n  } catch (err: any) {\n    if (signal.aborted) {\n      throw err;\n    }\n    return `{\\n  // error resolving schema: ${err?.toString()}\\n}\\n`;\n  }\n}\n","export async function getPluginUrls(signal: AbortSignal): Promise<string[]> {\n  const response = await fetch(\"https://plugins.dprint.dev/info.json\", { signal });\n  const json = await response.json();\n  const expectedSchemaVersion = 4;\n\n  if (json.schemaVersion !== expectedSchemaVersion) {\n    throw new Error(`Expected schema version ${expectedSchemaVersion}, but found ${json.schemaVersion}.`);\n  }\n\n  const typescriptPlugin = json.latest.find((p: any) => p.configKey === \"typescript\")!;\n  const jsonPlugin = json.latest.find((p: any) => p.configKey === \"json\")!;\n  const markdownPlugin = json.latest.find((p: any) => p.configKey === \"markdown\")!;\n  const tomlPlugin = json.latest.find((p: any) => p.configKey === \"toml\")!;\n  const dockerfilePlugin = json.latest.find((p: any) => p.configKey === \"dockerfile\")!;\n\n  return [typescriptPlugin.url, jsonPlugin.url, markdownPlugin.url, tomlPlugin.url, dockerfilePlugin.url];\n}\n\nexport function getLanguageFromPluginUrl(url: string) {\n  const result = /https:\\/\\/plugins\\.dprint\\.dev\\/([a-z]+)-[0-9]+\\.[0-9]+\\.[0-9]+\\.wasm$/.exec(url);\n  const language = result?.[1];\n  switch (language) {\n    case \"typescript\":\n    case \"markdown\":\n    case \"json\":\n    case \"toml\":\n    case \"dockerfile\":\n      return language;\n    default:\n      return undefined;\n  }\n}\n","import type { PluginInfo } from \"@dprint/formatter\";\nimport React, { ChangeEvent, useCallback, useEffect, useMemo, useState } from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport { CodeEditor, ExternalLink } from \"./components\";\nimport { Spinner } from \"./components\";\nimport \"./external/react-splitpane.css\";\nimport * as formatterWorker from \"./FormatterWorker\";\nimport \"./Playground.css\";\nimport { getLanguageFromPluginUrl } from \"./plugins\";\n\nexport interface PlaygroundProps {\n  configText: string;\n  onConfigTextChanged: (text: string) => void;\n  text: string;\n  onTextChanged: (text: string) => void;\n  formattedText: string;\n  selectedPluginInfo: PluginInfo;\n  selectedPluginUrl: string;\n  pluginUrls: string[];\n  onSelectPluginUrl: (pluginUrl: string) => void;\n  isLoading: boolean;\n}\n\nexport function Playground({\n  configText,\n  onConfigTextChanged,\n  text,\n  onTextChanged,\n  formattedText,\n  selectedPluginUrl,\n  selectedPluginInfo,\n  pluginUrls,\n  onSelectPluginUrl,\n  isLoading,\n}: PlaygroundProps) {\n  const [scrollTop, setScrollTop] = useState(0);\n  const [fileExtension, setFileExtension] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    setFileExtension(selectedPluginInfo.fileExtensions[0]);\n  }, [selectedPluginInfo]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      formatterWorker.formatText(\"file.\" + fileExtension ?? \"ts\", text);\n    }, 250);\n\n    return () => clearTimeout(timeout);\n  }, [fileExtension, text]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      let config;\n      try {\n        config = JSON.parse(configText);\n        if (config.lineWidth == null) {\n          config.lineWidth = 80;\n        }\n        formatterWorker.setConfig(config);\n      } catch (err) {\n        // ignore for now\n      }\n    }, 250);\n\n    return () => clearTimeout(timeout);\n  }, [configText]);\n\n  const lineWidth = useMemo(() => {\n    try {\n      const lineWidth = parseInt(JSON.parse(configText).lineWidth, 10);\n      if (!isNaN(lineWidth)) {\n        return lineWidth;\n      }\n    } catch (err) {\n      // ignore\n    }\n    return 80;\n  }, [configText]);\n  const onFileExtensionChange = useCallback((event: ChangeEvent<HTMLSelectElement>) => {\n    setFileExtension(event.target.value);\n  }, [setFileExtension]);\n\n  return (\n    <div className=\"App\">\n      <SplitPane split=\"horizontal\" defaultSize={53} allowResize={false}>\n        <header className=\"appHeader\">\n          <h1 id=\"title\">dprint - Playground</h1>\n          <div id=\"headerRight\">\n            <a href=\"/overview\">Overview</a>\n            <a href=\"/playground\">Playground</a>\n            <a href=\"/sponsor\">Sponsor</a>\n            <ExternalLink url=\"https://github.com/dprint/dprint\" text=\"View on GitHub\" />\n          </div>\n        </header>\n        <SplitPane\n          split=\"vertical\"\n          minSize={50}\n          defaultSize=\"50%\"\n          allowResize={true}\n          pane1Style={{ overflowX: \"hidden\", overflowY: \"hidden\" }}\n          pane2Style={{ overflowX: \"hidden\", overflowY: \"hidden\" }}\n        >\n          <SplitPane\n            split=\"horizontal\"\n            allowResize={true}\n            defaultSize=\"60%\"\n            pane1Style={{ overflowX: \"hidden\", overflowY: \"hidden\" }}\n            pane2Style={{ overflowX: \"hidden\", overflowY: \"hidden\" }}\n          >\n            <div className=\"container\">\n              <div className=\"playgroundSubTitle\">\n                <div className=\"row\">\n                  <div className=\"column\">\n                    Plugin:\n                  </div>\n                  <div className=\"column\" style={{ flex: 1, display: \"flex\" }}>\n                    <select onChange={e => onSelectPluginUrl(pluginUrls[e.target.selectedIndex])} style={{ flex: 1 }} value={selectedPluginUrl}>\n                      {pluginUrls.map((pluginUrl, i) => {\n                        return (\n                          <option key={i} value={pluginUrl}>\n                            {pluginUrl}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                  <div className=\"column\" style={{ display: \"flex\" }}>\n                    <select value={fileExtension} onChange={onFileExtensionChange}>\n                      {selectedPluginInfo.fileExtensions.map((ext, i) => <option key={i} value={ext}>{\".\"}{ext}</option>)}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <CodeEditor\n                language={getLanguageFromPluginUrl(selectedPluginUrl)}\n                onChange={onTextChanged}\n                text={text}\n                lineWidth={lineWidth}\n                onScrollTopChange={setScrollTop}\n                scrollTop={scrollTop}\n              />\n            </div>\n            <div className=\"container\">\n              <div className=\"playgroundSubTitle\">\n                Configuration\n              </div>\n              <CodeEditor\n                language={\"json\"}\n                onChange={onConfigTextChanged}\n                jsonSchemaUrl={selectedPluginInfo?.configSchemaUrl}\n                text={configText}\n              />\n            </div>\n          </SplitPane>\n          <div className=\"container\">\n            {isLoading ? <Spinner /> : (\n              <CodeEditor\n                language={getLanguageFromPluginUrl(selectedPluginUrl)}\n                text={formattedText}\n                readonly={true}\n                lineWidth={lineWidth}\n                onScrollTopChange={setScrollTop}\n                scrollTop={scrollTop}\n              />\n            )}\n          </div>\n        </SplitPane>\n      </SplitPane>\n    </div>\n  );\n}\n","import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from \"lz-string\";\n\nexport class UrlSaver {\n  getUrlInfo() {\n    const locationHash = document.location.hash || \"\";\n\n    return {\n      text: getText(),\n      configText: getConfigText(),\n      language: getLanguage(),\n    };\n\n    function getText() {\n      const matches = /code\\/([^/]+)/.exec(locationHash);\n      if (matches == null || matches.length !== 2) {\n        return \"\";\n      }\n\n      try {\n        return decompress(matches[1]);\n      } catch (err) {\n        console.error(err);\n        return \"\";\n      }\n    }\n\n    function getConfigText(): string | undefined {\n      const matches = /config\\/([^/]+)/.exec(locationHash);\n      if (matches == null || matches.length !== 2) {\n        return undefined;\n      }\n\n      try {\n        return decompress(matches[1]);\n      } catch (err) {\n        console.error(err);\n        return undefined;\n      }\n    }\n\n    function getLanguage(): \"typescript\" | \"json\" | \"markdown\" | \"toml\" | \"dockerfile\" {\n      const matches = /language\\/([^/]+)/.exec(locationHash);\n      if (matches == null || matches.length !== 2) {\n        return \"typescript\";\n      }\n\n      try {\n        switch (matches[1]) {\n          case \"json\":\n            return \"json\";\n          case \"markdown\":\n            return \"markdown\";\n          case \"toml\":\n            return \"toml\";\n          case \"dockerfile\":\n            return \"dockerfile\";\n          case \"typescript\":\n          default:\n            return \"typescript\";\n        }\n      } catch (err) {\n        console.error(err);\n        return \"typescript\";\n      }\n    }\n  }\n\n  updateUrl({ text, configText, language }: {\n    text: string;\n    configText?: string;\n    language?: \"typescript\" | \"json\" | \"markdown\" | \"toml\" | \"dockerfile\";\n  }) {\n    if (language == null) {\n      window.history.replaceState(\n        undefined,\n        \"\",\n        ``,\n      );\n    } else {\n      let url = `#code/${compressToEncodedURIComponent(text)}`;\n      if (configText != null) {\n        url += `/config/${compressToEncodedURIComponent(configText)}`;\n      }\n      url += `/language/${language}`;\n      window.history.replaceState(\n        undefined,\n        \"\",\n        url,\n      );\n    }\n  }\n}\n\nfunction decompress(text: string) {\n  return decompressFromEncodedURIComponent(text.trim()) || \"\"; // will be null on error\n}\n","import type { PluginInfo } from \"@dprint/formatter\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Spinner } from \"./components\";\nimport * as formatterWorker from \"./FormatterWorker\";\nimport \"./index.css\";\nimport { Playground } from \"./Playground\";\nimport { getLanguageFromPluginUrl, getPluginDefaultConfig, getPluginUrls } from \"./plugins\";\nimport { UrlSaver } from \"./utils\";\n\nconst urlSaver = new UrlSaver();\nconst initialUrl = urlSaver.getUrlInfo();\nlet isFirstLoad = true;\n\nfunction Loader() {\n  const [pluginUrls, setPluginUrls] = useState<string[]>([]);\n  const [pluginUrl, setPluginUrl] = useState<string | undefined>();\n  const [pluginInfo, setPluginInfo] = useState<PluginInfo | undefined>();\n  const [text, setText] = useState(initialUrl.text);\n  const [configText, setConfigText] = useState(initialUrl.configText ?? \"\");\n  const [defaultConfigText, setDefaultConfigText] = useState(\"\");\n  const [formattedText, setFormattedText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  // initialization\n  useEffect(() => {\n    const abortController = new AbortController();\n    getPluginUrls(abortController.signal).then(pluginUrls => {\n      setPluginUrls(pluginUrls);\n      setPluginUrl(pluginUrls.find(url => getLanguageFromPluginUrl(url) === (initialUrl.language ?? \"typescript\"))!);\n    }).catch(err => {\n      if (!abortController.signal.aborted) {\n        console.error(err);\n        alert(\"There was an error getting the plugins. Try refreshing the page or check the browser console.\");\n      }\n    });\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  useEffect(() => {\n    formatterWorker.addOnPluginInfo(onPluginInfo);\n    formatterWorker.addOnFormat(onFormat);\n    formatterWorker.addOnError(onError);\n\n    return () => {\n      formatterWorker.removeOnPluginInfo(onPluginInfo);\n      formatterWorker.removeOnError(onError);\n      formatterWorker.removeOnFormat(onFormat);\n    };\n\n    function onPluginInfo(pluginInfo: PluginInfo) {\n      setPluginInfo(pluginInfo);\n    }\n\n    function onFormat(text: string) {\n      setFormattedText(text);\n    }\n\n    function onError(err: string) {\n      console.error(err);\n      alert(\"There was an error with the formatter worker. Try refreshing the page or check the browser console.\");\n    }\n  }, [setFormattedText, setPluginInfo]);\n\n  useEffect(() => {\n    if (pluginUrl == null) {\n      return;\n    }\n\n    urlSaver.updateUrl({\n      text,\n      configText: configText === defaultConfigText ? undefined : configText,\n      language: getLanguageFromPluginUrl(pluginUrl),\n    });\n  }, [text, configText, pluginUrl, defaultConfigText]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (pluginUrl == null) {\n      return;\n    }\n\n    formatterWorker.loadUrl(pluginUrl);\n  }, [pluginUrl]);\n\n  useEffect(() => {\n    if (pluginUrl == null || pluginInfo == null) {\n      return;\n    }\n\n    const abortController = new AbortController();\n    getPluginDefaultConfig(pluginInfo.configSchemaUrl, abortController.signal).then(defaultConfigText => {\n      if (isFirstLoad && initialUrl.configText != null) {\n        setConfigText(initialUrl.configText);\n        isFirstLoad = false;\n      } else {\n        setConfigText(defaultConfigText);\n      }\n      setDefaultConfigText(defaultConfigText);\n      setIsLoading(false);\n    }).catch(err => {\n      if (abortController.signal.aborted) {\n        return;\n      }\n\n      console.error(err);\n      alert(\"There was an error loading the plugin. Check the console or try refreshing the page.\");\n    });\n\n    return () => {\n      abortController.abort();\n    };\n  }, [pluginUrl, pluginInfo]);\n\n  if (pluginUrl == null || pluginInfo == null) {\n    return <Spinner />;\n  }\n\n  return (\n    <Playground\n      text={text}\n      onTextChanged={setText}\n      configText={configText}\n      onConfigTextChanged={setConfigText}\n      formattedText={formattedText}\n      pluginUrls={pluginUrls}\n      selectedPluginUrl={pluginUrl}\n      selectedPluginInfo={pluginInfo}\n      onSelectPluginUrl={url => {\n        setPluginInfo(undefined);\n        setPluginUrl(url);\n      }}\n      isLoading={isLoading}\n    />\n  );\n}\n\nReactDOM.render(<Loader />, document.getElementById(\"root\"));\n"],"sourceRoot":""}