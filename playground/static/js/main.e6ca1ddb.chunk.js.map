{"version":3,"sources":["formatter.worker.ts","components/CodeEditor.tsx","components/Spinner.tsx","components/ExternalLink.tsx","FormatterWorker.ts","Playground.tsx","plugins/getPluginDefaultConfig.ts","plugins/getPluginInfo.ts","utils/UrlSharer.ts","index.tsx"],"names":["addMethods","methods","module","exports","w","Worker","name","Language","Spinner","props","backgroundColor","className","style","color","loading","size","CodeEditor","editor","monacoEditor","outerContainerRef","React","createRef","disposables","lastScrollTop","state","editorComponent","undefined","editorDidMount","bind","reactMonacoEditorPromise","then","language","TypeScript","languages","typescript","typescriptDefaults","setCompilerOptions","noLib","target","ScriptTarget","ESNext","allowNonTsExtensions","setDiagnosticsOptions","noSyntaxValidation","noSemanticValidation","defineTheme","base","inherit","rules","colors","setState","default","catch","err","console","error","this","updateScrollTop","updateJsonSchema","ref","getEditor","dispose","length","width","height","value","text","theme","onChange","options","automaticLayout","renderWhitespace","readOnly","readonly","minimap","enabled","quickSuggestions","rulers","lineWidth","push","onDidChangeModelContent","setPosition","column","lineNumber","onDidScrollChange","e","scrollTopChanged","onScrollTopChange","scrollTop","lastHeight","lastWidth","intervalId","setInterval","containerElement","current","offsetWidth","offsetHeight","layout","clearInterval","setTimeout","setScrollTop","jsonSchemaUrl","json","jsonDefaults","diagnosticsOptions","schemas","uri","validate","allowComments","enableSchemaRequest","fileMatch","Component","ExternalLink","id","href","url","rel","formatterWorker","createWorker","formatListeners","errorListeners","addEventListener","ev","data","type","listener","message","Playground","configText","onConfigTextChanged","onTextChanged","formattedText","fileExtensions","selectedPlugin","plugins","onSelectPlugin","isLoading","useState","fileExtension","setFileExtension","useEffect","timeout","filePath","fileText","postMessage","clearTimeout","config","JSON","parse","useMemo","parseInt","isNaN","onFileExtensionChange","useCallback","event","split","defaultSize","allowResize","minSize","pane1Style","overflowX","overflowY","pane2Style","flex","display","selectedIndex","map","pluginInfo","i","ext","Json","configSchemaUrl","plugin","a","fetch","response","wroteProperty","Object","keys","properties","propertyName","property","defaultValue","definitions","toString","schemaVersion","Error","typescriptPlugin","latest","find","p","configKey","jsonPlugin","markdownPlugin","tomlPlugin","Markdown","Toml","decompress","decompressFromEncodedURIComponent","trim","urlSaver","locationHash","document","location","hash","matches","exec","getText","getConfigText","getLanguage","window","history","replaceState","compressToEncodedURIComponent","initialUrl","getUrlInfo","isFirstLoad","Loader","setPlugins","setPlugin","setFileExtensions","setText","setConfigText","defaultConfigText","setDefaultConfigText","setFormattedText","setIsLoading","getPluginInfo","alert","updateUrl","defaultConfigPromise","getPluginDefaultConfig","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e6ca1ddb.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"89f106a825f6f01bdff1.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import type * as monacoEditorForTypes from \"monaco-editor\";\nimport React from \"react\";\nimport type ReactMonacoEditorForTypes from \"react-monaco-editor\";\nimport { Spinner } from \"./Spinner\";\n\nexport interface CodeEditorProps {\n  onChange?: (text: string) => void;\n  text?: string;\n  readonly?: boolean;\n  lineWidth?: number;\n  scrollTop?: number;\n  jsonSchemaUrl?: string;\n  onScrollTopChange?: (scrollTop: number) => void;\n  language: Language;\n}\n\nexport enum Language {\n  TypeScript = \"typescript\",\n  Json = \"json\",\n  Markdown = \"markdown\",\n  Toml = \"toml\",\n}\n\nexport interface CodeEditorState {\n  editorComponent: (typeof ReactMonacoEditorForTypes) | undefined | false;\n}\n\nexport class CodeEditor extends React.Component<CodeEditorProps, CodeEditorState> {\n  private editor: monacoEditorForTypes.editor.IStandaloneCodeEditor | undefined;\n  private monacoEditor: typeof monacoEditorForTypes | undefined;\n  private outerContainerRef = React.createRef<HTMLDivElement>();\n  private disposables: monacoEditorForTypes.IDisposable[] = [];\n\n  constructor(props: CodeEditorProps) {\n    super(props);\n    this.state = {\n      editorComponent: undefined,\n    };\n    this.editorDidMount = this.editorDidMount.bind(this);\n\n    const reactMonacoEditorPromise = import(\"react-monaco-editor\");\n    import(\"monaco-editor\").then(monacoEditor => {\n      this.monacoEditor = monacoEditor;\n      if (this.props.language === Language.TypeScript) {\n        monacoEditor.languages.typescript.typescriptDefaults.setCompilerOptions({\n          noLib: true,\n          target: monacoEditor.languages.typescript.ScriptTarget.ESNext,\n          allowNonTsExtensions: true,\n        });\n        monacoEditor.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n          noSyntaxValidation: true,\n          noSemanticValidation: true,\n        });\n      }\n\n      monacoEditor.editor.defineTheme(\"dprint-theme\", {\n        base: \"vs-dark\",\n        inherit: true,\n        rules: [],\n        colors: {\n          \"editorRuler.foreground\": \"#283430\",\n        },\n      });\n\n      reactMonacoEditorPromise.then(editor => {\n        this.setState({ editorComponent: editor.default });\n      }).catch(err => {\n        console.error(err);\n        this.setState({ editorComponent: false });\n      });\n    }).catch(err => {\n      console.error(err);\n      this.setState({ editorComponent: false });\n    });\n  }\n\n  render() {\n    this.updateScrollTop();\n    this.updateJsonSchema();\n\n    return (\n      <div className=\"codeEditor\" ref={this.outerContainerRef}>\n        {this.getEditor()}\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    for (const disposable of this.disposables) {\n      disposable.dispose();\n    }\n    this.disposables.length = 0; // clear\n  }\n\n  private getEditor() {\n    if (this.state.editorComponent == null) {\n      return <Spinner backgroundColor=\"#1e1e1e\" />;\n    }\n    if (this.state.editorComponent === false) {\n      return <div className={\"errorMessage\"}>Error loading code editor. Please refresh the page to try again.</div>;\n    }\n\n    return (\n      <this.state.editorComponent\n        width=\"100%\"\n        height=\"100%\"\n        value={this.props.text}\n        theme=\"dprint-theme\"\n        language={this.props.language}\n        onChange={text => this.props.onChange && this.props.onChange(text)}\n        editorDidMount={this.editorDidMount}\n        options={{\n          automaticLayout: false,\n          renderWhitespace: \"all\",\n          readOnly: this.props.readonly || false,\n          minimap: { enabled: false },\n          quickSuggestions: false,\n          rulers: this.props.lineWidth == null ? [] : [this.props.lineWidth],\n        }}\n      />\n    );\n  }\n\n  private editorDidMount(editor: monacoEditorForTypes.editor.IStandaloneCodeEditor) {\n    this.editor = editor;\n\n    this.disposables.push(this.editor.onDidChangeModelContent(() => {\n      if (this.props.readonly) {\n        this.editor!.setPosition({\n          column: 1,\n          lineNumber: 1,\n        });\n      }\n    }));\n\n    this.disposables.push(this.editor.onDidScrollChange(e => {\n      if (e.scrollTopChanged && this.props.onScrollTopChange) {\n        this.props.onScrollTopChange(e.scrollTop);\n      }\n    }));\n\n    // manually refresh the layout of the editor (lightweight compared to monaco editor)\n    let lastHeight = 0;\n    let lastWidth = 0;\n    const intervalId = setInterval(() => {\n      const containerElement = this.outerContainerRef.current;\n      if (containerElement == null) {\n        return;\n      }\n\n      const width = containerElement.offsetWidth;\n      const height = containerElement.offsetHeight;\n      if (lastHeight === height && lastWidth === width) {\n        return;\n      }\n\n      editor.layout();\n\n      lastHeight = height;\n      lastWidth = width;\n    }, 500);\n    this.disposables.push({ dispose: () => clearInterval(intervalId) });\n  }\n\n  private lastScrollTop = 0;\n  private updateScrollTop() {\n    if (this.editor == null || this.lastScrollTop === this.props.scrollTop) {\n      return;\n    }\n\n    // todo: not sure how to not do this in the render method? I'm not a react/web person.\n    setTimeout(() => {\n      if (this.props.scrollTop != null) {\n        this.editor!.setScrollTop(this.props.scrollTop);\n        this.lastScrollTop = this.props.scrollTop;\n      }\n    }, 0);\n  }\n\n  private updateJsonSchema() {\n    if (this.monacoEditor != null && this.props.jsonSchemaUrl != null) {\n      if (this.monacoEditor.languages.json.jsonDefaults.diagnosticsOptions.schemas?.[0]?.uri !== this.props.jsonSchemaUrl) {\n        this.monacoEditor.languages.json.jsonDefaults.setDiagnosticsOptions({\n          validate: true,\n          allowComments: true,\n          enableSchemaRequest: true,\n          schemas: [{\n            uri: this.props.jsonSchemaUrl,\n            fileMatch: [\"*\"],\n          }],\n        });\n      }\n    }\n  }\n}\n","import React from \"react\";\nimport { BeatLoader } from \"react-spinners\";\n\nexport function Spinner(props: { backgroundColor?: string }) {\n  const { backgroundColor } = props;\n  return (\n    <div className={\"verticallyCenter horizontallyCenter fillHeight\"} style={{ backgroundColor }}>\n      <BeatLoader color={\"#fff\"} loading={true} size={25} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function ExternalLink(props: { text: string; url: string; id?: string }): React.ReactElement {\n  return <a id={props.id} href={props.url} rel=\"noopener noreferrer\">{props.text}</a>;\n}\n","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport createWorker from \"workerize-loader!./formatter.worker\";\n\nconst formatterWorker = createWorker();\nconst formatListeners: ((text: string) => void)[] = [];\nconst errorListeners: ((err: string) => void)[] = [];\n\nformatterWorker.addEventListener(\"message\", ev => {\n  switch (ev.data.type) {\n    case \"Format\":\n      for (const listener of formatListeners) {\n        listener(ev.data.text);\n      }\n      break;\n    case \"Error\":\n      for (const listener of errorListeners) {\n        listener(ev.data.message);\n      }\n      break;\n  }\n});\n\nexport function loadUrl(url: string) {\n  formatterWorker.postMessage({\n    type: \"LoadUrl\",\n    url,\n  });\n}\n\nexport function setConfig(config: any) {\n  formatterWorker.postMessage({\n    type: \"SetConfig\",\n    config,\n  });\n}\n\nexport function formatText(filePath: string, fileText: string) {\n  formatterWorker.postMessage({\n    type: \"Format\",\n    filePath,\n    fileText,\n  });\n}\n\nexport function addOnFormat(listener: (text: string) => void) {\n  formatListeners.push(listener);\n}\n\nexport function removeOnFormat(listener: (text: string) => void) {\n  const index = formatListeners.indexOf(listener);\n  if (index >= 0) {\n    formatListeners.splice(index, 1);\n  }\n}\n\nexport function addOnError(listener: (err: string) => void) {\n  errorListeners.push(listener);\n}\n\nexport function removeOnError(listener: (err: string) => void) {\n  const index = errorListeners.indexOf(listener);\n  if (index >= 0) {\n    errorListeners.splice(index, 1);\n  }\n}\n","import React, { ChangeEvent, useCallback, useEffect, useMemo, useState } from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport \"./external/react-splitpane.css\";\nimport { CodeEditor, ExternalLink, Language } from \"./components\";\nimport { Spinner } from \"./components\";\nimport * as formatterWorker from \"./FormatterWorker\";\nimport \"./Playground.css\";\nimport { PluginInfo } from \"./plugins\";\n\nexport interface PlaygroundProps {\n  configText: string;\n  onConfigTextChanged: (text: string) => void;\n  text: string;\n  onTextChanged: (text: string) => void;\n  formattedText: string;\n  fileExtensions: string[];\n  selectedPlugin: PluginInfo;\n  plugins: PluginInfo[];\n  onSelectPlugin: (plugin: PluginInfo) => void;\n  isLoading: boolean;\n}\n\nexport function Playground({\n  configText,\n  onConfigTextChanged,\n  text,\n  onTextChanged,\n  formattedText,\n  fileExtensions,\n  selectedPlugin,\n  plugins,\n  onSelectPlugin,\n  isLoading,\n}: PlaygroundProps) {\n  const [scrollTop, setScrollTop] = useState(0);\n  const [fileExtension, setFileExtension] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    setFileExtension(fileExtensions[0]);\n  }, [fileExtensions]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      formatterWorker.formatText(\"file.\" + fileExtension ?? \"ts\", text);\n    }, 250);\n\n    return () => clearTimeout(timeout);\n  }, [fileExtension, text]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      let config;\n      try {\n        config = JSON.parse(configText);\n        if (config.lineWidth == null) {\n          config.lineWidth = 80;\n        }\n        formatterWorker.setConfig(config);\n      } catch (err) {\n        // ignore for now\n      }\n    }, 250);\n\n    return () => clearTimeout(timeout);\n  }, [configText]);\n\n  const lineWidth = useMemo(() => {\n    try {\n      const lineWidth = parseInt(JSON.parse(configText).lineWidth, 10);\n      if (!isNaN(lineWidth)) {\n        return lineWidth;\n      }\n    } catch (err) {\n      // ignore\n    }\n    return 80;\n  }, [configText]);\n  const onFileExtensionChange = useCallback((event: ChangeEvent<HTMLSelectElement>) => {\n    setFileExtension(event.target.value);\n  }, [setFileExtension]);\n\n  return (\n    <div className=\"App\">\n      <SplitPane split=\"horizontal\" defaultSize={53} allowResize={false}>\n        <header className=\"appHeader\">\n          <h1 id=\"title\">dprint - Playground</h1>\n          <div id=\"headerRight\">\n            <a href=\"/overview\">Overview</a>\n            <a href=\"/playground\">Playground</a>\n            <a href=\"/sponsor\">Sponsor</a>\n            <ExternalLink url=\"https://github.com/dprint/dprint\" text=\"View on GitHub\" />\n          </div>\n        </header>\n        <SplitPane\n          split=\"vertical\"\n          minSize={50}\n          defaultSize=\"50%\"\n          allowResize={true}\n          pane1Style={{ overflowX: \"hidden\", overflowY: \"hidden\" }}\n          pane2Style={{ overflowX: \"hidden\", overflowY: \"hidden\" }}\n        >\n          <SplitPane\n            split=\"horizontal\"\n            allowResize={true}\n            defaultSize=\"60%\"\n            pane1Style={{ overflowX: \"hidden\", overflowY: \"hidden\" }}\n            pane2Style={{ overflowX: \"hidden\", overflowY: \"hidden\" }}\n          >\n            <div className=\"container\">\n              <div className=\"playgroundSubTitle\">\n                <div className=\"row\">\n                  <div className=\"column\">\n                    Plugin:\n                  </div>\n                  <div className=\"column\" style={{ flex: 1, display: \"flex\" }}>\n                    <select onChange={e => onSelectPlugin(plugins[e.target.selectedIndex])} style={{ flex: 1 }} value={selectedPlugin.url}>\n                      {plugins.map((pluginInfo, i) => {\n                        return <option key={i} value={pluginInfo.url}>\n                          {pluginInfo.url}\n                        </option>;\n                      })}\n                    </select>\n                  </div>\n                  <div className=\"column\" style={{ display: \"flex\" }}>\n                    <select value={fileExtension} onChange={onFileExtensionChange}>\n                      {fileExtensions.map((ext, i) => <option key={i} value={ext}>{\".\"}{ext}</option>)}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <CodeEditor\n                language={selectedPlugin.language}\n                onChange={onTextChanged}\n                text={text}\n                lineWidth={lineWidth}\n                onScrollTopChange={setScrollTop}\n                scrollTop={scrollTop}\n              />\n            </div>\n            <div className=\"container\">\n              <div className=\"playgroundSubTitle\">\n                Configuration\n              </div>\n              <CodeEditor\n                language={Language.Json}\n                onChange={onConfigTextChanged}\n                jsonSchemaUrl={selectedPlugin.configSchemaUrl}\n                text={configText}\n              />\n            </div>\n          </SplitPane>\n          <div className=\"container\">\n            {isLoading ? <Spinner /> : <CodeEditor\n              language={selectedPlugin.language}\n              text={formattedText}\n              readonly={true}\n              lineWidth={lineWidth}\n              onScrollTopChange={setScrollTop}\n              scrollTop={scrollTop}\n            />}\n          </div>\n        </SplitPane>\n      </SplitPane>\n    </div>\n  );\n}\n","import { PluginInfo } from \"./getPluginInfo\";\n\nexport async function getPluginDefaultConfig(plugin: PluginInfo) {\n  const response = await fetch(plugin.configSchemaUrl);\n  const json = await response.json();\n  let text = \"{\";\n  let wroteProperty = false;\n\n  for (const propertyName of Object.keys(json.properties)) {\n    if (propertyName === \"$schema\" || propertyName === \"deno\" || propertyName === \"locked\") {\n      continue;\n    }\n    const property = json.properties[propertyName];\n    let defaultValue: string | boolean | number | undefined;\n\n    if (property[\"$ref\"]) {\n      defaultValue = json.definitions[propertyName]?.default;\n    } else {\n      defaultValue = property.default;\n    }\n\n    if (defaultValue != null) {\n      if (wroteProperty) {\n        text += \",\\n\";\n      } else {\n        text += \"\\n\";\n      }\n\n      text += `  \"${propertyName}\": `;\n      if (typeof defaultValue === \"string\") {\n        text += `\"${defaultValue}\"`;\n      } else {\n        if (propertyName === \"lineWidth\") {\n          text += \"80\";\n        } else {\n          text += `${defaultValue.toString()}`;\n        }\n      }\n\n      wroteProperty = true;\n    }\n  }\n\n  text += \"\\n}\\n\";\n\n  return text;\n}\n","import { Language } from \"../components\";\n\nexport async function getPluginInfo(): Promise<PluginInfo[]> {\n  const response = await fetch(\"https://plugins.dprint.dev/info.json\");\n  const json = await response.json();\n  const expectedSchemaVersion = 3;\n\n  if (json.schemaVersion !== expectedSchemaVersion) {\n    throw new Error(`Expected schema version ${expectedSchemaVersion}, but found ${json.schemaVersion}.`);\n  }\n\n  const typescriptPlugin = json.latest.find((p: any) => p.configKey === \"typescript\")!;\n  const jsonPlugin = json.latest.find((p: any) => p.configKey === \"json\")!;\n  const markdownPlugin = json.latest.find((p: any) => p.configKey === \"markdown\")!;\n  const tomlPlugin = json.latest.find((p: any) => p.configKey === \"toml\")!;\n\n  return [{\n    url: typescriptPlugin.url,\n    configSchemaUrl: \"https://plugins.dprint.dev/schemas/typescript-v0.json\",\n    language: Language.TypeScript,\n    fileExtensions: typescriptPlugin.fileExtensions,\n  }, {\n    url: jsonPlugin.url,\n    configSchemaUrl: \"https://plugins.dprint.dev/schemas/json-v0.json\",\n    language: Language.Json,\n    fileExtensions: jsonPlugin.fileExtensions,\n  }, {\n    url: markdownPlugin.url,\n    configSchemaUrl: \"https://plugins.dprint.dev/schemas/markdown-v0.json\",\n    language: Language.Markdown,\n    fileExtensions: markdownPlugin.fileExtensions,\n  }, {\n    url: tomlPlugin.url,\n    configSchemaUrl: \"https://plugins.dprint.dev/schemas/toml-v0.json\",\n    language: Language.Toml,\n    fileExtensions: tomlPlugin.fileExtensions,\n  }];\n}\n\nexport interface PluginInfo {\n  url: string;\n  configSchemaUrl: string;\n  language: Language;\n  fileExtensions: string[];\n}\n","import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from \"lz-string\";\n\nexport class UrlSaver {\n  getUrlInfo() {\n    const locationHash = document.location.hash || \"\";\n\n    return {\n      text: getText(),\n      configText: getConfigText(),\n      language: getLanguage(),\n    };\n\n    function getText() {\n      const matches = /code\\/([^/]+)/.exec(locationHash);\n      if (matches == null || matches.length !== 2) {\n        return \"\";\n      }\n\n      try {\n        return decompress(matches[1]);\n      } catch (err) {\n        console.error(err);\n        return \"\";\n      }\n    }\n\n    function getConfigText(): string | undefined {\n      const matches = /config\\/([^/]+)/.exec(locationHash);\n      if (matches == null || matches.length !== 2) {\n        return undefined;\n      }\n\n      try {\n        return decompress(matches[1]);\n      } catch (err) {\n        console.error(err);\n        return undefined;\n      }\n    }\n\n    function getLanguage(): \"typescript\" | \"json\" | \"markdown\" | \"toml\" {\n      const matches = /language\\/([^/]+)/.exec(locationHash);\n      if (matches == null || matches.length !== 2) {\n        return \"typescript\";\n      }\n\n      try {\n        switch (matches[1]) {\n          case \"json\":\n            return \"json\";\n          case \"markdown\":\n            return \"markdown\";\n          case \"toml\":\n            return \"toml\";\n          case \"typescript\":\n          default:\n            return \"typescript\";\n        }\n      } catch (err) {\n        console.error(err);\n        return \"typescript\";\n      }\n    }\n  }\n\n  updateUrl({ text, configText, language }: { text: string; configText?: string; language?: \"typescript\" | \"json\" | \"markdown\" | \"toml\" }) {\n    if (language == null) {\n      window.history.replaceState(\n        undefined,\n        \"\",\n        ``,\n      );\n    } else {\n      let url = `#code/${compressToEncodedURIComponent(text)}`;\n      if (configText != null) {\n        url += `/config/${compressToEncodedURIComponent(configText)}`;\n      }\n      url += `/language/${language}`;\n      window.history.replaceState(\n        undefined,\n        \"\",\n        url,\n      );\n    }\n  }\n}\n\nfunction decompress(text: string) {\n  return decompressFromEncodedURIComponent(text.trim()) || \"\"; // will be null on error\n}\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Spinner } from \"./components\";\nimport * as formatterWorker from \"./FormatterWorker\";\nimport \"./index.css\";\nimport { Playground } from \"./Playground\";\nimport { getPluginDefaultConfig, getPluginInfo, PluginInfo } from \"./plugins\";\nimport { UrlSaver } from \"./utils\";\n\nconst urlSaver = new UrlSaver();\nconst initialUrl = urlSaver.getUrlInfo();\nlet isFirstLoad = true;\n\nfunction Loader() {\n  const [plugins, setPlugins] = useState<PluginInfo[]>([]);\n  const [plugin, setPlugin] = useState<PluginInfo | undefined>();\n  const [fileExtensions, setFileExtensions] = useState<string[]>([]);\n  const [text, setText] = useState(initialUrl.text);\n  const [configText, setConfigText] = useState(initialUrl.configText ?? \"\");\n  const [defaultConfigText, setDefaultConfigText] = useState(\"\");\n  const [formattedText, setFormattedText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getPluginInfo().then(plugins => {\n      setPlugins(plugins);\n      setPlugin(plugins.find(p => p.language === initialUrl.language ?? \"typescript\")!);\n    }).catch(err => {\n      console.error(err);\n      alert(\"There was an error getting the plugins. Try refreshing the page or check the browser console.\");\n    });\n  }, []);\n  useEffect(() => {\n    formatterWorker.addOnFormat(text => {\n      setFormattedText(text);\n    });\n\n    formatterWorker.addOnError(err => {\n      console.error(err);\n      alert(\"There was an error with the formatter worker. Try refreshing the page or check the browser console.\");\n    });\n  }, []);\n\n  useEffect(() => {\n    if (plugin == null) {\n      return;\n    }\n\n    urlSaver.updateUrl({\n      text,\n      configText: configText === defaultConfigText ? undefined : configText,\n      language: plugin.language,\n    });\n  }, [text, configText, plugin, defaultConfigText]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (plugin == null) {\n      return;\n    }\n\n    const defaultConfigPromise = getPluginDefaultConfig(plugin);\n\n    formatterWorker.loadUrl(plugin.url);\n\n    defaultConfigPromise.then(defaultConfigText => {\n      setFileExtensions([...plugin.fileExtensions]); // todo: get this from the wasm file (easy to do)\n\n      if (isFirstLoad && initialUrl.configText != null) {\n        setConfigText(initialUrl.configText);\n        isFirstLoad = false;\n      } else {\n        setConfigText(defaultConfigText);\n      }\n      setDefaultConfigText(defaultConfigText);\n      setIsLoading(false);\n    })\n      .catch(err => {\n        console.error(err);\n        alert(\"There was an error loading the plugin. Check the console or try refreshing the page.\");\n      });\n  }, [plugin]);\n\n  if (plugin == null) {\n    return <Spinner />;\n  }\n\n  return <Playground\n    text={text}\n    onTextChanged={setText}\n    configText={configText}\n    onConfigTextChanged={setConfigText}\n    formattedText={formattedText}\n    fileExtensions={fileExtensions}\n    plugins={plugins}\n    selectedPlugin={plugin}\n    onSelectPlugin={setPlugin}\n    isLoading={isLoading}\n  />;\n}\n\nReactDOM.render(<Loader />, document.getElementById(\"root\"));\n"],"sourceRoot":""}